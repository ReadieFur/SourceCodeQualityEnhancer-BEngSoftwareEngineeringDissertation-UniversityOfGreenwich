% Encoding: UTF-8

@article{10.1145/2507288.2507312,
  author     = {Singh, Pavitdeep and Singh, Satwinder and Kaur, Jatinder},
  title      = {Tool for Generating Code Metrics for C\# Source Code Using Abstract Syntax Tree Technique},
  year       = {2013},
  issue_date = {September 2013},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {38},
  number     = {5},
  issn       = {0163-5948},
  url        = {https://doi.org/10.1145/2507288.2507312},
  doi        = {10.1145/2507288.2507312},
  journal    = {SIGSOFT Softw. Eng. Notes},
  month      = {aug},
  pages      = {1-6},
  numpages   = {6},
  keywords   = {abstract syntax tree, Nfactory, source code analysis, C\#, code metrics}
}

@inproceedings{10.1145/3379597.3387457,
  author    = {Pecorelli, Fabiano and Palomba, Fabio and Khomh, Foutse and De Lucia, Andrea},
  title     = {Developer-Driven Code Smell Prioritization},
  year      = {2020},
  isbn      = {9781450375177},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3379597.3387457},
  doi       = {10.1145/3379597.3387457},
  booktitle = {Proceedings of the 17th International Conference on Mining Software Repositories},
  pages     = {220-231},
  numpages  = {12},
  keywords  = {Machine Learning for Software Engineering, Code smells, Empirical Software Engineering},
  location  = {Seoul, Republic of Korea},
  series    = {MSR '20}
}

@inproceedings{10.1145/3428029.3428047,
  author    = {Kirk, Diana and Tempero, Ewan and Luxton-Reilly, Andrew and Crow, Tyne},
  title     = {High School Teachers' Understanding of Code Style},
  year      = {2020},
  isbn      = {9781450389211},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3428029.3428047},
  doi       = {10.1145/3428029.3428047},
  booktitle = {Proceedings of the 20th Koli Calling International Conference on Computing Education Research},
  articleno = {12},
  numpages  = {10},
  keywords  = {Code style, Computing education, Qualitative study, K12},
  location  = {Koli, Finland},
  series    = {Koli Calling '20}
}

@inproceedings{10.1145/2674683.2674702,
  author    = {Stegeman, Martijn and Barendsen, Erik and Smetsers, Sjaak},
  title     = {Towards an Empirically Validated Model for Assessment of Code Quality},
  year      = {2014},
  isbn      = {9781450330657},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2674683.2674702},
  doi       = {10.1145/2674683.2674702},
  abstract  = {We present a pilot study into developing a model of feedback on code quality in introductory programming courses. To devise such a model, we analyzed professional standards of code quality embedded in three popular software engineering handbooks and found 401 suggestions that we categorized into twenty topics. We recorded three instructors who performed a think-aloud judgment of student-submitted programs, and we interviewed them on the topics from the books, leading to 178 statements about code quality. The statements from the instructor interviews allowed us to generate a set of topics relevant to their practice of giving feedback, which we used to create criteria for the model. We used the instructor statements as well as the book suggestions to distinguish three levels of achievement for each criterion. This resulted in a total of 9 criteria for code quality. The interviews with the instructors generated a view of code quality that is very comparable to what was found in the handbooks, while the handbooks provide detailed suggestions that make our results richer than previously published grading schemes. As such, this process leads to an overview of code quality criteria and levels that can be very useful for constructing a standards-based rubric for introductory programming courses.},
  booktitle = {Proceedings of the 14th Koli Calling International Conference on Computing Education Research},
  pages     = {99–108},
  numpages  = {10},
  keywords  = {programming education, empirical validation, feedback, code quality, assessment, rubrics},
  location  = {Koli, Finland},
  series    = {Koli Calling '14}
}

@inproceedings{10.1145/3555228.3555268,
  author    = {Neto, Antonio and Bezerra, Carla and Serafim Martins, J\'{u}lio},
  title     = {Code Smell Co-Occurrences: A Systematic Mapping},
  year      = {2022},
  isbn      = {9781450397353},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3555228.3555268},
  doi       = {10.1145/3555228.3555268},
  booktitle = {Proceedings of the XXXVI Brazilian Symposium on Software Engineering},
  pages     = {331-336},
  numpages  = {6},
  keywords  = {refactoring. internal quality attributes, code smells co-occurrences},
  location  = {Virtual Event, Brazil},
  series    = {SBES '22}
}

@inproceedings{6606742,
  author    = {Saraiva, Juliana},
  booktitle = {2013 35th International Conference on Software Engineering (ICSE)},
  title     = {A roadmap for software maintainability measurement},
  year      = {2013},
  volume    = {},
  number    = {},
  pages     = {1453-1455},
  doi       = {10.1109/ICSE.2013.6606742}
}

@inproceedings{7372958,
  author    = {Kummamuru, Supriya and Hussaini, Syed W},
  booktitle = {TENCON 2015 - 2015 IEEE Region 10 Conference},
  title     = {Designing an organization structure for large and complex IT programs using the Viable System Model(VSM)},
  year      = {2015},
  volume    = {},
  number    = {},
  pages     = {1-5},
  doi       = {10.1109/TENCON.2015.7372958}
}

@inproceedings{8681007,
  author    = {Ashfaq, Qirat and Khan, Rimsha and Farooq, Sehrish},
  booktitle = {2019 2nd International Conference on Communication, Computing and Digital systems (C-CODE)},
  title     = {A Comparative Analysis of Static Code Analysis Tools that check Java Code Adherence to Java Coding Standards},
  year      = {2019},
  volume    = {},
  number    = {},
  pages     = {98-103},
  doi       = {10.1109/C-CODE.2019.8681007}
}

@inproceedings{8802820,
  author    = {Liu, Yi},
  booktitle = {2019 IEEE/ACM 41st International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)},
  title     = {JSOptimizer: An Extensible Framework for JavaScript Program Optimization},
  year      = {2019},
  volume    = {},
  number    = {},
  pages     = {168-170},
  doi       = {10.1109/ICSE-Companion.2019.00069}
}

//Marwen Abbes, Foutse Khomh, Yann-Gael Gueheneuc, and Giuliano Antoniol.2011. An empirical study of the impact of two antipatterns, blob and spaghetticode, on program comprehension. InSoftware maintenance and reengineering(CSMR), 2011 15th European conference on. 181–190.
@inproceedings{ImpactOfAntipatterns,
  author          = {Marwen Abbes and Foutse Khomh and Yann-Gael Gueheneuc and Giuliano Antoniol},
  booktitle       = {Software maintenance and reengineering(CSMR), 2011 15th European conference on},
  title           = {An empirical study of the impact of two antipatterns, blob and spaghetti code, on program comprehension},
  year            = {2011}
}

//Foutse Khomh, Massimiliano Di Penta, Yann-Gaël Guéhéneuc, and GiulianoAntoniol. 2012. An exploratory study of the impact of antipatterns on classchange-and fault-proneness.Empirical Software Engineering17, 3 (2012), 243–275
@inproceedings{ImpactOfAntipatterns2,
  author          = {Foutse Khomh and Massimiliano Di Penta and Yann-Gaël Guéhéneuc and Giuliano Antoniol},
  booktitle       = {Empirical Software Engineering},
  title           = {An exploratory study of the impact of antipatterns on class change-and fault-proneness},
  year            = {2012},
}

//Fabio Palomba, Gabriele Bavota, Massimiliano Di Penta, Fausto Fasano, RoccoOliveto, and Andrea De Lucia. 2017. On the diffuseness and the impact onmaintainability of code smells: a large scale empirical investigation.EmpiricalSoftware Engineering(2017), 1–34.
@inproceedings{CodeSmellsAndMaintainability,
  author          = {Fabio Palomba and Gabriele Bavota and Massimiliano Di Penta and Fausto Fasano Rocco Oliveto and Andrea De Lucia},
  booktitle       = {Empirical Software Engineering},
  title           = {On the diffuseness and the impact on maintainability of code smells: a large scale empirical investigation},
  year            = {2017}
}

//Giovanni Grano, Fabio Palomba, and Harald C Gall. 2019. Lightweight Assess-ment of Test-Case Effectiveness using Source-Code-Quality Indicators.IEEETransactions on Software Engineering(2019).
@inproceedings{TestCasesAndCodeQuality,
  author          = {Giovanni Grano and Fabio Palomba and Harald C Gall},
  booktitle       = {IEEE Transactions on Software Engineering},
  title           = {Lightweight Assessment of Test-Case Effectiveness using Source-Code-Quality Indicators},
  year            = {2019}
}

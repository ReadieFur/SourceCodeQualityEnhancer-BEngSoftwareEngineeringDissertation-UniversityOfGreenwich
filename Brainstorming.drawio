<mxfile host="Electron" modified="2023-11-06T17:38:29.864Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.8 Chrome/114.0.5735.289 Electron/25.5.0 Safari/537.36" etag="pPsVTtJMEEayTE4VUUH6" version="21.6.8" type="device">
  <diagram name="Page-1" id="OCFWvM1lfoxvB3xuhuFg">
    <mxGraphModel dx="1727" dy="989" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="AKcpm6AED6DrHBMJDPTD-14" value="" style="swimlane;startSize=0;" vertex="1" parent="1">
          <mxGeometry x="90" y="60" width="1040" height="630" as="geometry">
            <mxRectangle x="70" y="50" width="50" height="40" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-3" value="Solutions" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-14">
          <mxGeometry x="672.5" y="340" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-1" value="Problem domain" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-14">
          <mxGeometry x="210" y="30" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-6" value="The papers all explain the importance of good coding standards and how having a poor codebase can result iun difficulty maintaning, optmising and finding bugs in code.&lt;br&gt;They go on to state that poorly maintained and developed code can impact the quality of the end result and cost development teams more time and money than it theoritcally should.&lt;br&gt;One of the papers which investigated code smells said that when programming is being taught, the methodology of how things are done is not taught so well which then results in code-smell occuring. They went on to discuss how some standards should be set in place to help mitigate these issues" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-14">
          <mxGeometry x="70" y="100" width="430" height="160" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-9" value="Paper notes" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-14">
          <mxGeometry x="190" y="330" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-10" value="While the papers all discuss various problems in software development projects and possible solutions for them all, none of them quite solve the problem of maintanibility.&lt;br&gt;There are tools that will warn and fix errors or optmise programs, and there are others that will hint about following a structure. However from what I can tell no program will actually help you cohear to a schema or coding pratices." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-14">
          <mxGeometry x="67.5" y="410" width="365" height="110" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-2" value="Challenges" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-14">
          <mxGeometry x="670" y="50" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-7" value="The papers go on to say that while there are various tools that solve certain aspects of the problem, it is difficult for developers to pick what tool is best suited for their project" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-14">
          <mxGeometry x="590" y="130" width="270" height="80" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-13" value="&lt;ul&gt;&lt;li&gt;Machine learning model to find optimisations in code&lt;/li&gt;&lt;li style=&quot;&quot;&gt;Algorithm to find ways to reduce code duplication and smell&lt;/li&gt;&lt;li style=&quot;&quot;&gt;Algorithm to enforce parigisgm and style standards&lt;/li&gt;&lt;/ul&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-14">
          <mxGeometry x="550" y="390" width="365" height="110" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-43" value="From what I can gather there are many papers on the therotical resolution of the discussed issues but there are not many papers that show solutions that attempt to or do solve them." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-14">
          <mxGeometry x="70" y="520" width="365" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-16" value="" style="swimlane;startSize=0;" vertex="1" parent="1">
          <mxGeometry x="1170" y="60" width="1620" height="910" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-11" value="My idea is to create a tool that will analyze a codebase and format it to a specified schema to ensure maintability and good coding pratices." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="20" y="100" width="365" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-12" value="Using such a tool could help reduce code complexity, duplication, make use of paradigms such as inheretance and abstraction as well as making larger code bases easier to manage and navigate." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="20" y="160" width="365" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-17" value="Idea" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="142.5" y="30" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-18" value="Implemntation" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="790" y="20" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-19" value="I would like to write a tool that is generic and would work on multiple languages. However due to time constraints I will write the tool for the C# language as I am fluent in this language, and then if time permits I will try to make the tool multi-language compatiable, though it is unlikley I could also make the tool multi-paradigm compatiable in the give timeframe." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="467.5" y="120" width="365" height="80" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-20" value="With this in mind I will likley use the visual studio plugin framework to interact with the source code in the IDE." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="467.5" y="200" width="365" height="40" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-21" value="Before any optimisations can be made I will need to analyze the source code that I am provided with. Through the research papers it looks like it will make sense to build an abstract syntax tree so I can break down the program in to something more managable by an algorithm." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="467.5" y="240" width="365" height="80" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-22" value="Before any optimisations can be made I will need to analyze the source code that I am provided with. Through the research papers it looks like it will make sense to build an abstract syntax tree so I can break down the program in to something more managable by an algorithm.&lt;br&gt;Taking this approach also has other benifits as it can also allow me to generate UML diagrams and brief documentation for the given source code which can help developers get an overview of a program." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="467.5" y="320" width="365" height="140" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-24" value="I will be taking an algorithmic approach to this task as I believe I will find it easier to achive this way. This is in comparason to completing such a task with a machine learning model.&lt;br&gt;My idea is that I can provide my algorithm with a schema, this schema defines the basis of the language (such as the keywords) and syntax that the compiler can understand, using this we can then decduct what the code does and build out the AST.&lt;br&gt;We can then provide a secondary schema which is what we would like to conform to, these could be things like the use of whitespace or allowing the use of oo parigms such as abstraction, reduction of side-affect methods, etc." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="860" y="110" width="365" height="140" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-25" value="Source code optimisation and formatting can have many meanings. In my case it will be by refractoring code to make it easier to manage and read by using object-oriented parigims." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="20" y="220" width="365" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-26" value="An important thing to rember here is that the reproduced code should still achive the same functionality as the original code. It should also remain error free and not make the code worse by producing code smells or dead code.&lt;br&gt;A constraint I am thinking of is not allowing my program to modify faulty code. While I should be able to spot syntatically incorrect code dusing the AST generation, due to my intergration with the IDE, I should be able to use the built-in language specific linter to do this for me." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="860" y="260" width="365" height="140" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-27" value="The resulting code that the tool creates should higlight changes to the developer first before applying them." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="860" y="400" width="365" height="40" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-28" value="In order to undertake this task I will have to research deeper into the following topics:" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="1240" y="110" width="365" height="40" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-29" value="&lt;ul&gt;&lt;li&gt;Static code analysis&lt;/li&gt;&lt;li&gt;Abstract syntax trees (for building out the data for my algorithm to work with)&lt;/li&gt;&lt;li&gt;Cyclic references (important to prevent my program from looping indefinetly during parsing)&lt;br&gt;&lt;/li&gt;&lt;li&gt;Object oriented parigims (for code deduplication)&lt;/li&gt;&lt;li&gt;Coding conventions (and language specific ones, in my case for C# such as the typing style)&lt;/li&gt;&lt;/ul&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="1240" y="160" width="365" height="140" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-30" value="Measuring success" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="1075" y="550" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-31" value="Goals" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="142.5" y="500" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-32" value="I would like my project to achive the following:" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="20" y="580" width="365" height="30" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-33" value="&lt;ul&gt;&lt;li&gt;(Primary) Deduplicate code by use of various OO paridigims&lt;/li&gt;&lt;li&gt;(Primary) Format a codebase to cohear to a schema&lt;/li&gt;&lt;li&gt;Produce an easier to maintain codebase from a complex one&lt;/li&gt;&lt;li&gt;Generate UML diagrams for a visual overview of the modified codebase&lt;/li&gt;&lt;li&gt;(Stretch) generate basic documentation for codebases&lt;/li&gt;&lt;/ul&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="20" y="610" width="365" height="110" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-34" value="Future work" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="552.5" y="520" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-35" value="&lt;ul&gt;&lt;li&gt;With such a tool it could therotically be possible to translate codebases from language to lauguage with minimal modification to the tool&lt;/li&gt;&lt;li&gt;The ability to run the tool on functional languages&lt;/li&gt;&lt;/ul&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="430" y="590" width="365" height="80" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-36" value="&lt;ul&gt;&lt;li&gt;Produced code should maintain the function and result of the original code&lt;/li&gt;&lt;ul&gt;&lt;li&gt;This can be measured and tested by running test methods on the original and modified code. This in itself is another challange as we dont know what the code should nessecarily do, so instead the developer should ideally provide tests that we cna then run the new code on to ensure it passes&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Produced code should not be any harder to digest by the developer than the original code&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Measuring this metic may prove harder as it can come down to a personal preference and the schema provided, however there are two ways to measure this. One could be by use of the static analysis the measure the complexity of the modified code, and the other if by peer review, asking developers which code bases they prefer the style of.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Peformance should ideally be on-par or better than the original code&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Again this can be hard to measure, we could use metrics from method testing and checking the execution time, memory usage etc, there are many good tools for this such as &amp;lt;find the tool that nick chapsas uses&amp;gt;. I can also test the therotical peformance too based on the language schema and big O notation.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="800" y="660" width="670" height="220" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-37" value="In order to measure the success of the tool I would take into account the following considerations:" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="952.5" y="630" width="365" height="30" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-39" value="My tool most likley wont peform realtime code analysis, though it could attempt to and while doing so hint that the developer is or isnt following the specified schema." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="20" y="280" width="365" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-40" value="Purpose" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="1367.5" y="310" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-41" value="The purpose of this tool would be to make maintaining code bases easier by the enforcement of styles.&lt;br&gt;The tool will also exist for bringing old code-bases up to modern standards, for example a company may give an old, outdated and ubndocumented codebase to a new development team, usually the company would have to waste time and money on the new team having to learn the new code base and figure out what it does but with my proposed tool we can use the UML diagrams to give an overview of the tool as well as re-format the code into a schema that the new development team prefferes to use, you could then very well pass the code onto a new team in the future and have the tool reformat the codebase again into a different style." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="1240" y="390" width="365" height="180" as="geometry" />
        </mxCell>
        <mxCell id="AKcpm6AED6DrHBMJDPTD-42" value="Like one of the papers states &quot;no tool succeeds in all respects&quot;, my tool will not nessecaraily aim to solve some of the pre-existing prroblems that lie in a code base, but it will aim to improve poorly written code and more importantly act as a tool to hopefully greatly prevent the issues that the paper discussed." style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="AKcpm6AED6DrHBMJDPTD-16">
          <mxGeometry x="20" y="350" width="365" height="60" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>

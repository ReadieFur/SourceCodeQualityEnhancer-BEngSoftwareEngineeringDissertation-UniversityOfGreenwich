<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0</TargetFrameworks>
    <IsPackable>false</IsPackable>
    <!-- Avoid ID conflicts with the package project. -->
    <PackageId>*$(MSBuildProjectFile)*</PackageId>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <ProjectGuid>{63039863-C6CE-4214-9957-6D6472C0EF00}</ProjectGuid>
    <Product>$(AssemblyName) ($(TargetFramework))</Product>
    <WeaverConfiguration>
      <Weavers>
        <Costura CreateTemporaryAssemblies="true" IncludeRuntimeReferences="false">
          <IncludeAssemblies>
            YamlDotNet
            <!--Microsoft.VisualStudio.*-->
          </IncludeAssemblies>
        </Costura>
      </Weavers>
    </WeaverConfiguration>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.8.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.8.0" />
    <PackageReference Include="YamlDotNet" Version="15.1.1"/>
    <!--I'm resorting to using the tool I had come across a very long time ago (Costura.Fody) in order to embed my specified references as I cannot be bothered right now to manually change figure out the build targets required to do this task.-->
    <PackageReference Include="Costura.Fody" Version="5.7.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
</Project>
